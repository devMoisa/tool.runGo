{
  "id": "control-flow",
  "title": "Controle de Fluxo",
  "description": "if, switch, for com todas as variações",
  "category": "Básicos",
  "tags": ["if", "switch", "for", "range", "fallthrough", "controle"],
  "instruction": "# Controle de Fluxo em Go\n\n## Estruturas de Controle\n\nGo tem apenas **3 estruturas de controle**, mas são muito versáteis!\n\n## 1. IF - Condicionais\n\n### If Básico\n```go\nif idade >= 18 {\n    fmt.Println(\"Maior de idade\")\n}\n```\n\n### If com Inicialização\n```go\nif nota := calcularNota(); nota >= 7 {\n    fmt.Println(\"Aprovado!\")\n}\n```\n**Vantagem**: `nota` só existe dentro do bloco if.\n\n### If/Else Encadeado\n```go\nif score >= 90 {\n    grade = \"A\"\n} else if score >= 80 {\n    grade = \"B\"  \n} else {\n    grade = \"C\"\n}\n```\n\n## 2. SWITCH - Múltiplas Condições\n\n### Switch com Expressão\n```go\nswitch dia {\ncase \"segunda\":\n    fmt.Println(\"Início da semana\")\ncase \"sexta\":\n    fmt.Println(\"TGIF!\")\ndefault:\n    fmt.Println(\"Dia normal\")\n}\n```\n\n### Switch sem Expressão (como if/else)\n```go\nswitch {\ncase idade < 13:\n    categoria = \"Criança\"\ncase idade < 18:\n    categoria = \"Adolescente\"\ndefault:\n    categoria = \"Adulto\"\n}\n```\n\n### Fallthrough - Continua para o próximo case\n```go\nswitch num {\ncase 1:\n    fmt.Println(\"Um\")\n    fallthrough  // Executa o próximo case também\ncase 2:\n    fmt.Println(\"Número baixo\")\n}\n```\n\n## 3. FOR - O Único Loop do Go\n\n### For Clássico (estilo C)\n```go\nfor i := 0; i < 10; i++ {\n    fmt.Println(i)\n}\n```\n\n### For como While\n```go\nfor contador > 0 {\n    contador--\n}\n```\n\n### For Infinito\n```go\nfor {\n    // Loop infinito - use break para sair\n    if condicao {\n        break\n    }\n}\n```\n\n### For com Range (arrays, slices, maps)\n```go\nfor indice, valor := range slice {\n    fmt.Printf(\"%d: %v\\n\", indice, valor)\n}\n\n// Apenas valores (ignora índice)\nfor _, valor := range slice {\n    fmt.Println(valor)\n}\n\n// Apenas índices\nfor indice := range slice {\n    fmt.Println(indice)\n}\n```\n\n## Controles de Fluxo\n\n- **break**: Sai do loop\n- **continue**: Pula para próxima iteração\n- **return**: Sai da função\n\n## Rótulos (Labels)\n\n```go\nOuter:\nfor i := 0; i < 3; i++ {\n    for j := 0; j < 3; j++ {\n        if i == 1 && j == 1 {\n            break Outer  // Sai do loop externo\n        }\n    }\n}\n```\n\n## Boas Práticas\n\n✅ **Use switch** ao invés de if/else longos\n✅ **Range** para iterar coleções\n✅ **Inicialização no if** para escopo limitado\n✅ **Break/continue** para controle fino\n❌ **Evite** fallthrough (raramente necessário)\n\n## Experimente\n\n- Modifique as condições do if\n- Teste diferentes casos no switch\n- Use break e continue nos loops\n- Experimente range com diferentes tipos\n\n---\n*💡 Dica: Go não tem while ou do-while - use for para tudo!*",
  "code": "package main\n\nimport (\n    \"fmt\"\n    \"time\"\n)\n\nfunc main() {\n    fmt.Println(\"=== IF CONDICIONAIS ===\\n\")\n    \n    idade := 25\n    nota := 8.5\n    \n    // If simples\n    if idade >= 18 {\n        fmt.Println(\"✅ Maior de idade\")\n    }\n    \n    // If com inicialização\n    if imc := 70.0 / (1.75 * 1.75); imc < 25 {\n        fmt.Printf(\"💪 IMC saudável: %.1f\\n\", imc)\n    }\n    \n    // If/Else encadeado\n    if nota >= 9.0 {\n        fmt.Println(\"🌟 Excelente!\")\n    } else if nota >= 7.0 {\n        fmt.Println(\"👍 Bom trabalho!\")\n    } else {\n        fmt.Println(\"📚 Precisa estudar mais\")\n    }\n    \n    fmt.Println(\"\\n=== SWITCH ===\\n\")\n    \n    // Switch com expressão\n    dia := time.Now().Weekday()\n    switch dia {\n    case time.Monday:\n        fmt.Println(\"😴 Segunda-feira\")\n    case time.Tuesday:\n        fmt.Println(\"💪 Terça-feira\")\n    case time.Wednesday:\n        fmt.Println(\"🐪 Quarta-feira\")\n    case time.Thursday:\n        fmt.Println(\"🎯 Quinta-feira\")\n    case time.Friday:\n        fmt.Println(\"🎉 Sexta-feira!\")\n    case time.Saturday, time.Sunday:\n        fmt.Println(\"🏖️ Final de semana!\")\n    }\n    \n    // Switch sem expressão (como if/else)\n    switch {\n    case idade < 13:\n        fmt.Println(\"👶 Criança\")\n    case idade < 20:\n        fmt.Println(\"🧑 Adolescente\")\n    case idade < 60:\n        fmt.Println(\"👨 Adulto\")\n    default:\n        fmt.Println(\"👴 Idoso\")\n    }\n    \n    // Switch com fallthrough\n    numero := 1\n    fmt.Printf(\"\\nNúmero %d:\\n\", numero)\n    switch numero {\n    case 1:\n        fmt.Println(\"  - É um\")\n        fallthrough // Continua para o próximo case\n    case 2:\n        fmt.Println(\"  - É um número pequeno\")\n    default:\n        fmt.Println(\"  - Outro número\")\n    }\n    \n    fmt.Println(\"\\n=== LOOPS FOR ===\\n\")\n    \n    // For clássico\n    fmt.Println(\"🔢 Contagem de 1 a 5:\")\n    for i := 1; i <= 5; i++ {\n        fmt.Printf(\"  %d \", i)\n    }\n    fmt.Println(\"\\n\")\n    \n    // For como while\n    fmt.Println(\"⏱️ Countdown:\")\n    contador := 5\n    for contador > 0 {\n        fmt.Printf(\"  %d... \", contador)\n        contador--\n    }\n    fmt.Println(\"🚀 Lançar!\\n\")\n    \n    // For com range (slice)\n    fmt.Println(\"📝 Iterando com range:\")\n    frutas := []string{\"🍎 Maçã\", \"🍌 Banana\", \"🍊 Laranja\"}\n    \n    for i, fruta := range frutas {\n        fmt.Printf(\"  %d: %s\\n\", i+1, fruta)\n    }\n    \n    // Range apenas com valores\n    fmt.Println(\"\\n🍎 Apenas os valores:\")\n    for _, fruta := range frutas {\n        fmt.Printf(\"  %s \", fruta)\n    }\n    fmt.Println(\"\\n\")\n    \n    // For com break e continue\n    fmt.Println(\"🔢 Números pares de 1 a 10:\")\n    for i := 1; i <= 10; i++ {\n        if i%2 != 0 {\n            continue // Pula números ímpares\n        }\n        fmt.Printf(\"  %d \", i)\n        \n        if i >= 6 {\n            break // Para quando chegar no 6\n        }\n    }\n    fmt.Println(\"\\n\")\n    \n    // Exemplo com rótulo (label)\n    fmt.Println(\"🏷️ Exemplo com rótulo:\")\nOuter:\n    for i := 1; i <= 3; i++ {\n        for j := 1; j <= 3; j++ {\n            if i == 2 && j == 2 {\n                fmt.Printf(\"    Parando no (%d,%d)\\n\", i, j)\n                break Outer // Sai do loop externo\n            }\n            fmt.Printf(\"    (%d,%d) \", i, j)\n        }\n        fmt.Println()\n    }\n    \n    fmt.Println(\"\\n=== RANGE COM MAP ===\\n\")\n    \n    pontuacao := map[string]int{\n        \"Ana\":   95,\n        \"Bruno\": 87,\n        \"Carol\": 92,\n    }\n    \n    for nome, pontos := range pontuacao {\n        var medal string\n        if pontos >= 95 {\n            medal = \"🥇\"\n        } else if pontos >= 90 {\n            medal = \"🥈\"\n        } else {\n            medal = \"🥉\"\n        }\n        fmt.Printf(\"  %s %s: %d pontos\\n\", medal, nome, pontos)\n    }\n}"
}